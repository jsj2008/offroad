#############################################################################
# Makefile for building: Offroad
# Generated by qmake (2.01a) (Qt 4.7.2) on: Tue May 10 22:22:42 2011
# Project:  app.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile app.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I../bullet/src -I../bullet/Extras/Serialize/BulletWorldImporter -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lGLEW -lBulletDynamics -lBulletCollision -lLinearMath -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = App.cpp \
		btBulletWorldImporter.cpp \
		debug-drawer/GLDebugDrawer.cpp \
		debug-drawer/GLDebugFont.cpp \
		BulletFileLoader/bChunk.cpp \
		BulletFileLoader/bDNA.cpp \
		BulletFileLoader/bFile.cpp \
		BulletFileLoader/btBulletFile.cpp \
		vehicle/btRaycastVehicle.cpp \
		vehicle/btWheelInfo.cpp moc_App.cpp
OBJECTS       = App.o \
		btBulletWorldImporter.o \
		GLDebugDrawer.o \
		GLDebugFont.o \
		bChunk.o \
		bDNA.o \
		bFile.o \
		btBulletFile.o \
		btRaycastVehicle.o \
		btWheelInfo.o \
		moc_App.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		app.pro
QMAKE_TARGET  = Offroad
DESTDIR       = 
TARGET        = Offroad

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: app.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile app.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile app.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Offroad1.0.0 || $(MKDIR) .tmp/Offroad1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Offroad1.0.0/ && $(COPY_FILE) --parents debug-drawer/GLDebugDrawer.h debug-drawer/GLDebugFont.h App.h .tmp/Offroad1.0.0/ && $(COPY_FILE) --parents App.cpp btBulletWorldImporter.cpp debug-drawer/GLDebugDrawer.cpp debug-drawer/GLDebugFont.cpp BulletFileLoader/bChunk.cpp BulletFileLoader/bDNA.cpp BulletFileLoader/bFile.cpp BulletFileLoader/btBulletFile.cpp vehicle/btRaycastVehicle.cpp vehicle/btWheelInfo.cpp .tmp/Offroad1.0.0/ && (cd `dirname .tmp/Offroad1.0.0` && $(TAR) Offroad1.0.0.tar Offroad1.0.0 && $(COMPRESS) Offroad1.0.0.tar) && $(MOVE) `dirname .tmp/Offroad1.0.0`/Offroad1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Offroad1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_App.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_App.cpp
moc_App.cpp: btBulletWorldImporter.h \
		vehicle/btRaycastVehicle.h \
		vehicle/btVehicleRaycaster.h \
		vehicle/btWheelInfo.h \
		debug-drawer/GLDebugDrawer.h \
		App.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) App.h -o moc_App.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

App.o: App.cpp App.h \
		btBulletWorldImporter.h \
		vehicle/btRaycastVehicle.h \
		vehicle/btVehicleRaycaster.h \
		vehicle/btWheelInfo.h \
		debug-drawer/GLDebugDrawer.h \
		FirstPersonCamera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o App.o App.cpp

btBulletWorldImporter.o: btBulletWorldImporter.cpp btBulletWorldImporter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o btBulletWorldImporter.o btBulletWorldImporter.cpp

GLDebugDrawer.o: debug-drawer/GLDebugDrawer.cpp debug-drawer/GLDebugDrawer.h \
		debug-drawer/GLDebugFont.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLDebugDrawer.o debug-drawer/GLDebugDrawer.cpp

GLDebugFont.o: debug-drawer/GLDebugFont.cpp debug-drawer/GLDebugFont.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GLDebugFont.o debug-drawer/GLDebugFont.cpp

bChunk.o: BulletFileLoader/bChunk.cpp BulletFileLoader/bChunk.h \
		BulletFileLoader/bDefines.h \
		BulletFileLoader/bFile.h \
		BulletFileLoader/bCommon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bChunk.o BulletFileLoader/bChunk.cpp

bDNA.o: BulletFileLoader/bDNA.cpp BulletFileLoader/bDNA.h \
		BulletFileLoader/bCommon.h \
		BulletFileLoader/bChunk.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bDNA.o BulletFileLoader/bDNA.cpp

bFile.o: BulletFileLoader/bFile.cpp BulletFileLoader/bFile.h \
		BulletFileLoader/bCommon.h \
		BulletFileLoader/bChunk.h \
		BulletFileLoader/bDNA.h \
		BulletFileLoader/bDefines.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bFile.o BulletFileLoader/bFile.cpp

btBulletFile.o: BulletFileLoader/btBulletFile.cpp BulletFileLoader/btBulletFile.h \
		BulletFileLoader/bFile.h \
		BulletFileLoader/bCommon.h \
		BulletFileLoader/bChunk.h \
		BulletFileLoader/bDefines.h \
		BulletFileLoader/bDNA.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o btBulletFile.o BulletFileLoader/btBulletFile.cpp

btRaycastVehicle.o: vehicle/btRaycastVehicle.cpp vehicle/btRaycastVehicle.h \
		vehicle/btVehicleRaycaster.h \
		vehicle/btWheelInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o btRaycastVehicle.o vehicle/btRaycastVehicle.cpp

btWheelInfo.o: vehicle/btWheelInfo.cpp vehicle/btWheelInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o btWheelInfo.o vehicle/btWheelInfo.cpp

moc_App.o: moc_App.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_App.o moc_App.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

